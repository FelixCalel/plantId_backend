version: "3.9"

services:
  postgres:
    image: postgres:17-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d:ro
    ports:
      - "5433:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    env_file: .env
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - app-network

  frontend:
    build:
      context: ../plantId_frontend
      dockerfile: Dockerfile
      target: prod
    env_file: .env
    restart: always
    depends_on:
      - backend
    ports:
      - "5173:80"
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
